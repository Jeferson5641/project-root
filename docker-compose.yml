services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3003:3003"
    depends_on:
      - auth-service
      - data-service
      - mysql
    environment:
      NODE_ENV: production
      AUTH_SERVICE_URL: "http://auth-service:3001"
      DATA_SERVICE_URL: "http://data-service:3002"

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    expose:
      - "3001:3001"
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATA_SERVICE_URL: "http://data-service:3002"
    depends_on:
      data-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/auth/status"]
      interval: 10s
      timeout: 5s
      retries: 5

  data-service:
    build:
      context: ./data-service
      dockerfile: Dockerfile
    container_name: data-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      DATABASE_URL: "mysql://root:root@mysql:3306/project_root"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/auth/status"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.0.41
    container_name: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: project_root
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
